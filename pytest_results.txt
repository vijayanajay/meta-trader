============================= test session starts =============================
platform win32 -- Python 3.12.10, pytest-8.4.1, pluggy-1.5.0
rootdir: D:\Code\meta-trader
configfile: pyproject.toml
plugins: anyio-4.9.0, asyncio-0.26.0, base-url-2.1.0, cov-6.1.1, flask-1.3.0, mock-3.14.0, playwright-0.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 30 items

tests\test_config_service.py ...                                         [ 10%]
tests\test_data_service.py ....                                          [ 23%]
tests\test_indicators.py ......                                          [ 43%]
tests\test_llm_audit_service.py ...                                      [ 53%]
tests\test_signal_engine.py FF.                                          [ 63%]
tests\test_statistics.py ......                                          [ 83%]
tests\test_validation_service.py .....                                   [100%]

================================== FAILURES ===================================
________________________ test_generate_signal_success _________________________

>   ???
E   KeyError: 'WS'

pandas/_libs/tslibs/offsets.pyx:4776: KeyError

During handling of the above exception, another exception occurred:

>   ???

pandas/_libs/tslibs/offsets.pyx:4946: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

>   ???
E   ValueError: Invalid frequency: WS, failed to parse with error message: KeyError('WS')

pandas/_libs/tslibs/offsets.pyx:4782: ValueError

During handling of the above exception, another exception occurred:

signal_engine = <praxis_engine.services.signal_engine.SignalEngine object at 0x000002AB5112C380>

    def test_generate_signal_success(signal_engine: SignalEngine):
        """Test a successful signal generation with deterministic data."""
        # Construct a dataset designed to trigger the signal
        days = 200
        days = 300
        dates = pd.to_datetime(pd.date_range(end=pd.Timestamp.now(), periods=days, freq='D'))
    
        # Base series is stable at 100
        close_prices = np.full(days, 100.0)
    
        # --- Trigger Conditions ---
        # 1. Monthly: Not oversold. We'll keep the first few months stable at 100.
        # The BBands will be tight around 100. A close of 100 is > BBL.
    
        # 2. Weekly: Oversold. Make the last few weeks trend down.
        close_prices[-30:] = np.linspace(100, 80, 30)
    
        # 3. Daily: Oversold. Make the last day a sharp drop.
        close_prices[-1] = 70
        # Make RSI low by having a series of down-days.
        close_prices[-14:] = np.linspace(90, 70, 14)
    
        df = pd.DataFrame({
            "Close": close_prices,
            "Volume": np.full(days, 10_00_000),
            "sector_vol": np.full(days, 0.15),
        }, index=dates)
    
>       signal = signal_engine.generate_signal(df)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\test_signal_engine.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
praxis_engine\services\signal_engine.py:35: in generate_signal
    df_weekly = df_daily.resample('WS').last()
                ^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\generic.py:9790: in resample
    return get_resampler(
C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\resample.py:2049: in get_resampler
    tg = TimeGrouper(obj, **kwds)  # type: ignore[arg-type]
         ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\resample.py:2143: in __init__
    freq = to_offset(freq)
           ^^^^^^^^^^^^^^^
pandas/_libs/tslibs/offsets.pyx:4791: in pandas._libs.tslibs.offsets.to_offset
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

>   ???
E   ValueError: Invalid frequency: WS, failed to parse with error message: ValueError("Invalid frequency: WS, failed to parse with error message: KeyError('WS')")

pandas/_libs/tslibs/offsets.pyx:4954: ValueError
_______________________ test_generate_signal_daily_fail _______________________

>   ???
E   KeyError: 'WS'

pandas/_libs/tslibs/offsets.pyx:4776: KeyError

During handling of the above exception, another exception occurred:

>   ???

pandas/_libs/tslibs/offsets.pyx:4946: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

>   ???
E   ValueError: Invalid frequency: WS, failed to parse with error message: KeyError('WS')

pandas/_libs/tslibs/offsets.pyx:4782: ValueError

During handling of the above exception, another exception occurred:

signal_engine = <praxis_engine.services.signal_engine.SignalEngine object at 0x000002AB5112E600>

    def test_generate_signal_daily_fail(signal_engine: SignalEngine):
        """Test when the daily condition is not met."""
        df = create_test_df(200)
        df.iloc[-1, df.columns.get_loc('Close')] = 200
>       signal = signal_engine.generate_signal(df)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests\test_signal_engine.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
praxis_engine\services\signal_engine.py:35: in generate_signal
    df_weekly = df_daily.resample('WS').last()
                ^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\generic.py:9790: in resample
    return get_resampler(
C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\resample.py:2049: in get_resampler
    tg = TimeGrouper(obj, **kwds)  # type: ignore[arg-type]
         ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\resample.py:2143: in __init__
    freq = to_offset(freq)
           ^^^^^^^^^^^^^^^
pandas/_libs/tslibs/offsets.pyx:4791: in pandas._libs.tslibs.offsets.to_offset
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

>   ???
E   ValueError: Invalid frequency: WS, failed to parse with error message: ValueError("Invalid frequency: WS, failed to parse with error message: KeyError('WS')")

pandas/_libs/tslibs/offsets.pyx:4954: ValueError
=============================== tests coverage ================================
______________ coverage: platform win32, python 3.12.10-final-0 _______________

Name                                           Stmts   Miss  Cover
------------------------------------------------------------------
praxis_engine\__init__.py                          0      0   100%
praxis_engine\core\__init__.py                     0      0   100%
praxis_engine\core\indicators.py                  21      0   100%
praxis_engine\core\logger.py                      11      0   100%
praxis_engine\core\models.py                      50      0   100%
praxis_engine\core\statistics.py                  21      4    81%
praxis_engine\services\__init__.py                 0      0   100%
praxis_engine\services\config_service.py          17      3    82%
praxis_engine\services\data_service.py            39      3    92%
praxis_engine\services\llm_audit_service.py       21      1    95%
praxis_engine\services\signal_engine.py           48     32    33%
praxis_engine\services\validation_service.py      26      0   100%
tests\__init__.py                                  0      0   100%
tests\test_config_service.py                      27      0   100%
tests\test_data_service.py                        48      0   100%
tests\test_indicators.py                          33      0   100%
tests\test_llm_audit_service.py                   32      0   100%
tests\test_signal_engine.py                       35      3    91%
tests\test_statistics.py                          32      0   100%
tests\test_validation_service.py                  53      0   100%
------------------------------------------------------------------
TOTAL                                            514     46    91%
=========================== short test summary info ===========================
FAILED tests/test_signal_engine.py::test_generate_signal_success - ValueError...
FAILED tests/test_signal_engine.py::test_generate_signal_daily_fail - ValueEr...
======================== 2 failed, 28 passed in 7.72s =========================
